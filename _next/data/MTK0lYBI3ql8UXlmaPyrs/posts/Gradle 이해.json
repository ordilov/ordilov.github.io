{"pageProps":{"metadata":{"title":"Gradle 이해","date":"2022-02-15 00:00:01 +0900","category":"dev","tags":["backend"],"keywords":["backend"],"description":"gradle 공식문서를 보며 정리한 글입니다.","id":"Gradle 이해"},"mdxSource":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      h1: \"h1\",\n      p: \"p\",\n      ul: \"ul\",\n      li: \"li\",\n      h2: \"h2\",\n      h3: \"h3\",\n      code: \"code\",\n      ol: \"ol\"\n    }, _provideComponents(), props.components);\n    return _jsxs(_Fragment, {\n      children: [_jsx(_components.h1, {\n        children: \"Gradle\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Gradle은 오픈 소스 빌드 자동화 도구입니다.\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"고성능 (변경 부분만 실행해서 불필요한 작업 방지)\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"JVM (JDK 필요)\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"빌드 문제 식별 (문제가 발생하면 해결 정보 제공)\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.h2, {\n        children: \"Gradle에 대해 알아야 할 5가지 사항\"\n      }), \"\\n\", _jsx(_components.h3, {\n        children: \"1. Gradle은 범용 빌드 도구입니다.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Gradle은 빌드하려는 대상을 특정하지 않다고 가정합니다.\\n그래도 제한 사항이 있다면 의존성 관리가 Maven, Ivy와 호환되는 시스템만 지원합니다.\\n빌드하려면 플러그인을 추가해서 작업합니다.\"\n      }), \"\\n\", _jsx(_components.h3, {\n        children: \"2. 핵심 모델은 Task입니다.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Gradle은 비순환 그래프를 만들어서 공통적인 Task을 다시 처리하지 않습니다.\\nTask는 3가지로 구성됩니다.\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Actions: 작업으로 파일을 복사하거나 컴파일등의 작업\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Inputs: 값이나, 파일, 경로처럼 Actions에서 사용하는 것\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Outputs: 파일이나 경로들이 Actions에서 만들어지는 것\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"하지만 모든 Task는 위의 3가지를 선택사항으로 가집니다.\\n그렇기 때문에 작업도 필요한 작업만 선택해서 실행할 수 있습니다.\\n\", _jsx(_components.code, {\n          children: \"incremental build\"\n        }), \"는 안정적이고 빠른 작업에 도움되므로 clean은 꼭 필요한 때만 씁니다.\"]\n      }), \"\\n\", _jsx(_components.h3, {\n        children: \"3. Gradle에는 고정 빌드 단계가 있습니다.\"\n      }), \"\\n\", _jsxs(_components.ol, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Initialization\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"빌드 환경을 설정하고 어느 프로젝트를 실행할지 결정합니다.\"\n      }), \"\\n\", _jsxs(_components.ol, {\n        start: \"2\",\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Configuration\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"task를 구성하고 설정하고, 실행할 task와 실행 순서를 어떻게 할지 결정합니다.\"\n      }), \"\\n\", _jsxs(_components.ol, {\n        start: \"3\",\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Execution\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"선택한 task를 실행합니다.\"\n      }), \"\\n\", _jsx(_components.h3, {\n        children: \"4. Gradle은 확장 가능한 방법이 많습니다.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Task 타입을 추가하거나 action, action의 순서, convetion, model등을 추가할 수 있습니다.\"\n      }), \"\\n\", _jsx(_components.h3, {\n        children: \"5. Gradle Build Script는 API 처럼 동작합니다.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Gradle script는 실행 가능한 코드처럼 보이지만 API처럼 구현을 설명하지 않습니다.\\n구현 세부 사항은 플러그인에게 있고 script는 실행 단계만 설명합니다.\\n따라서 명령형처럼 실제 실행할 로직을 넣는 것은 피해야 합니다.\"\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}