{"pageProps":{"metadata":{"title":"이미지 업로드 에러","date":"2022-03-14 00:01:00 +0900","category":"spring","tags":["trouble"],"keywords":["trouble"],"description":"Multipart File 처리시 생길 수 있는 에러를 알아봅니다.","id":"이미지 업로드 에러"},"mdxSource":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      h2: \"h2\",\n      p: \"p\",\n      strong: \"strong\",\n      code: \"code\"\n    }, _provideComponents(), props.components);\n    return _jsxs(_Fragment, {\n      children: [_jsx(_components.h2, {\n        children: \"Content-Type\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"대부분의 경우는 Content-Type 헤더를 잘못 지정해서 에러가 발생합니다.\"\n      }), \"\\n\", _jsx(_components.h2, {\n        children: \"multipart/form-data 아닌 경우\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.strong, {\n          children: \"MultipartException: Current request is not a multipart request\"\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"에러 설명만 읽어봐도 알 듯이 헤더가 multipart가 아닌 경우 에러가 발생합니다.\"\n      }), \"\\n\", _jsx(_components.h2, {\n        children: \"multipart/form-data를 명시한 경우\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.strong, {\n          children: \"FileUploadException: the request was rejected because no multipart boundary was found\"\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"브라우저에서 서버에 요청할 때 헤더를 직접 명시해도 에러가 발생합니다.\\n이유를 읽어보면 파일을 multipart의 boundary를 찾을 수 없다고 합니다.\\n하지만 이런 에러는 postman 같은 클라이언트로 전송 시 발생하지 않았습니다.\"\n      }), \"\\n\", _jsx(_components.h2, {\n        children: \"해결 방법\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"브라우저에서 Content-Type 헤더를 비우고 전송하면 브라우저에서 자동으로 파일 타입을 지정해줍니다.\\n헤더는 \", _jsx(_components.code, {\n          children: \"multipart/form-data; boundary-----\"\n        }), \" 와 같은 형식으로 multipart와 boundary가 자동으로 명시됩니다.\"]\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}