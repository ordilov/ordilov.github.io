{"pageProps":{"postMetadata":{"layout":"post","title":"[프로그래머스] 방금그곡 (JAVA)","date":"2022-01-09 00:45:00 +0900","category":"algorithm","tags":["algorithm"],"keywords":["algorithm"],"id":"방금그곡"},"postContent":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      pre: \"pre\",\n      code: \"code\",\n      h2: \"h2\",\n      p: \"p\",\n      br: \"br\"\n    }, _provideComponents(), props.components);\n    return _jsxs(_Fragment, {\n      children: [_jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-java\",\n          children: \"import java.util.List;\\nimport java.util.ArrayList;\\nimport java.text.ParseException;\\nimport java.text.SimpleDateFormat;\\nimport java.util.concurrent.TimeUnit;\\n\\nclass Solution {\\n    public String solution(String m, String[] musicinfos) throws ParseException {\\n        /*\\n        musicinfos 로 재생된 거 만들기\\n        m과 비교해서 일치하는 것 찾기\\n        일치하면 재생된 시간 제일 긴것\\n        재생된 시간도 같으면 먼저 입력된 음악 제목\\n        */\\n        List<String> list = new ArrayList<>();\\n        int max = 0;\\n        SimpleDateFormat format = new SimpleDateFormat(\\\"HH:mm\\\");\\n        m = translateNoSharp(m);\\n        for (String musicinfo : musicinfos) {\\n            String[] split = musicinfo.split(\\\",\\\");\\n            long startDate = format.parse(split[0]).getTime();\\n            long endDate = format.parse(split[1]).getTime();\\n            int minute = (int) TimeUnit.MILLISECONDS.toMinutes(endDate - startDate);\\n\\n            String title = split[2];\\n            String score = split[3];\\n            score = translateNoSharp(score);\\n            StringBuilder melody = new StringBuilder();\\n            int length = minute;\\n            while (length > 0) {\\n                melody.append(score, 0, Math.min(length, score.length()));\\n                length -= score.length();\\n            }\\n            int idx = melody.indexOf(m);\\n            if (idx == -1) continue;\\n            if (minute < max) continue;\\n            if (minute > max) {\\n                list.clear();\\n                max = minute;\\n            }\\n            list.add(title);\\n        }\\n        String answer = \\\"(None)\\\";\\n        if (list.size() > 0) answer = list.get(0);\\n        return answer;\\n    }\\n\\n    private String translateNoSharp(String score) {\\n        score = score.replaceAll(\\\"C#\\\", \\\"c\\\");\\n        score = score.replaceAll(\\\"D#\\\", \\\"d\\\");\\n        score = score.replaceAll(\\\"F#\\\", \\\"f\\\");\\n        score = score.replaceAll(\\\"G#\\\", \\\"g\\\");\\n        score = score.replaceAll(\\\"A#\\\", \\\"a\\\");\\n        return score;\\n    }\\n}\\n\"\n        })\n      }), \"\\n\", _jsx(_components.h2, {\n        children: \"실수했던 점\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"처음 시도는 #을 기준으로 예외처리를 할려고 했습니다.\", _jsx(_components.br, {}), \"\\n\", \"하지만 로직에 문제가 있었는지 테스트케이스 3개정도가 통과하지 못했습니다.\", _jsx(_components.br, {}), \"\\n\", \"결국 다른 방법을 찾아 #을 아예 치환하는 방법을 택했습니다.\", _jsx(_components.br, {}), \"\\n\", \"처음 방법으로 성공하지 못한게 아쉬웠습니다.\", _jsx(_components.br, {}), \"\\n\", \"문법적으로 잘 몰랐던 부분은 SimpleDateFormat입니다.\", _jsx(_components.br, {}), \"\\n\", \"처음에 Date 클래스를 사용하려했는데 \", _jsx(_components.code, {\n          children: \"시:분\"\n        }), \"만 따로 사용할 수가 없었습니다.\", _jsx(_components.br, {}), \"\\n\", \"그래서 포맷으로 바꾸고 시간 차이를 분으로 바꿔야 됐습니다.\", _jsx(_components.br, {}), \"\\n\", \"시간 차이는 밀리세컨드로 나오므로 분으로 바꾸려면 나누기 60 * 1000을 해주면 됩니다.\", _jsx(_components.br, {}), \"\\n\", \"하지만 더 보기 쉬운 방법으로 TimeUnit의 Enum을 사용하면 ms에서 minute으로 변환할 수 있습니다.\"]\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"id":"방금그곡"},"__N_SSG":true}