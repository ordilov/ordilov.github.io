{"pageProps":{"metadata":{"layout":"post","title":"Jekyll에서 페이지 추가하기","date":"2022-01-03 00:45:00 +0900","category":"blog","tags":["blog"],"keywords":["blog"],"type":"archive","id":"jekyll page 추가"},"mdxSource":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      h2: \"h2\",\n      p: \"p\",\n      br: \"br\",\n      pre: \"pre\",\n      code: \"code\",\n      span: \"span\"\n    }, _provideComponents(), props.components);\n    return _jsxs(_Fragment, {\n      children: [_jsx(_components.h2, {\n        children: \"Jekyll에서 다른 페이지에 추가하기\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Jekyll에서 html이나 markdown을 추가하는 방법은 루트 위치에 파일을 놓으면 됩니다.\", _jsx(_components.br, {}), \"\\n\", \"빌드가 되면 _site에 생성된 파일을 확인할 수 있습니다.\"]\n      }), \"\\n\", _jsx(_components.h2, {\n        children: \"원하는 위치에 파일 놓기\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"하지만 루트에 파일이 많아지면 확인하기 힘드므로 이런 파일들을 다른 곳에 분리시킬 필요가 있습니다.\", _jsx(_components.br, {}), \"\\n\", \"이때 다른 디렉토리에 위치시키고 최상단에 liquid 형식으로 permalink를 추가해주면 됩니다.\", _jsx(_components.br, {}), \"\\n\", \"해당 html이 생성될 위치를 지정할 수 있습니다.\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-ruby\",\n          children: [\"---\\n\", _jsx(_components.span, {\n            className: \"hljs-symbol\",\n            children: \"permalink:\"\n          }), \" /a.html\\n---\\n\"]\n        })\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}