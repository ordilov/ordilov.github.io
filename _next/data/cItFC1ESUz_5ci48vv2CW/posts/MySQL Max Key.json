{"pageProps":{"metadata":{"layout":"post","title":"MySQL Max Key Length","date":"2022-02-11 00:01:00 +0900","category":"trouble","tags":["trouble"],"keywords":["trouble"],"id":"MySQL Max Key"},"mdxSource":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      p: \"p\",\n      blockquote: \"blockquote\"\n    }, _provideComponents(), props.components);\n    return _jsxs(_Fragment, {\n      children: [_jsx(_components.p, {\n        children: \"MySQL에서 unique 옵션이나 키로 설정한 값이 1000 바이트가 넘어간 경우 에러가 발생합니다.\"\n      }), \"\\n\", _jsxs(_components.blockquote, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"Specified key was too long; max key length is 1000 bytes\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"흔히 발생하는 경우가 varchar(255)로 설정하는 경우 1020 바이트로 1000 바이트를 넘습니다.\\n이런 칼럼을 unique 옵션을 넣거나 하면 에러가 발생합니다.\\n이렇게 막는 이유 중 하나는 인덱스 때문입니다.\\n키나 유니크는 자동으로 인덱스 처리가 되는데 이때 길이가 너무 길게 되면 처리에 문제가 있습니다.\\n따라서 아무리 커도 varchar의 경우 인덱스 처리가 필요할 시 아무리 커도 250으로 설정해야 합니다.\"\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}