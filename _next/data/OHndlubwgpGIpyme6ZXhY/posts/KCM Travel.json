{"pageProps":{"metadata":{"layout":"post","title":"KCM Travel","date":"2022-02-26 00:01:00 +0900","category":"algorithm","tags":["algorithm"],"keywords":["algorithm"],"id":"KCM Travel"},"mdxSource":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      pre: \"pre\",\n      code: \"code\",\n      span: \"span\",\n      h2: \"h2\",\n      p: \"p\"\n    }, _provideComponents(), props.components);\n    return _jsxs(_Fragment, {\n      children: [_jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"package\"\n          }), \" boj.graph\\n\\n\", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"import\"\n          }), \" java.util.*\\n\\n\", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// [KCM Travel] https://www.acmicpc.net/problem/10217\"\n          }), \"\\nfun \", _jsx(_components.span, {\n            className: \"hljs-title function_\",\n            children: \"main\"\n          }), _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"()\"\n          }), \" {\\n    \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"val\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"sb\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" StringBuilder()\\n    \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"val\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"t\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" readLine()!!.toInt()\\n    repeat(t) {\\n        val (n, m, k) = readLine()!!.split(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\" \\\"\"\n          }), \").map { it.toInt() }\\n        \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"val\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"graph\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" Array(n + \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"1\"\n          }), \") { ArrayList<Ticket>() }\\n        repeat(k) {\\n            val (u, v, c, d) = readLine()!!.split(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\" \\\"\"\n          }), \").map { it.toInt() }\\n            graph[u].add(Ticket(v, c, d))\\n        }\\n        \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"val\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"queue\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" PriorityQueue<Ticket>()\\n        \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"val\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"dist\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" Array(n + \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"1\"\n          }), \") { Array(m + \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"1\"\n          }), \") { Int.MAX_VALUE } }\\n        dist[\", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"1\"\n          }), \"][\", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"0\"\n          }), \"] = \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"0\"\n          }), \"\\n        queue.add(Ticket(\", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"1\"\n          }), \", \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"0\"\n          }), \", \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"0\"\n          }), \"))\\n        \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"var\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"answer\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" Int.MAX_VALUE\\n\\n        \", _jsx(_components.span, {\n            className: \"hljs-title function_\",\n            children: \"while\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"(queue.isNotEmpty()\"\n          }), \") {\\n            \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"val\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"cur\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" queue.poll()\\n            \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"if\"\n          }), \" (cur.v == n) {\\n                answer = cur.d\\n                \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"break\"\n          }), \"\\n            }\\n            \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"if\"\n          }), \" (dist[cur.v][cur.c] < cur.d) \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"continue\"\n          }), \"\\n            \", _jsx(_components.span, {\n            className: \"hljs-title function_\",\n            children: \"for\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"(ticket in graph[cur.v])\"\n          }), \" {\\n                \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"val\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"cost\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" cur.c + ticket.c\\n                \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"val\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"time\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" cur.d + ticket.d\\n\\n                \", _jsx(_components.span, {\n            className: \"hljs-title function_\",\n            children: \"if\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"(cost > m)\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"continue\"\n          }), \"\\n                \", _jsx(_components.span, {\n            className: \"hljs-title function_\",\n            children: \"if\"\n          }), _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"(dist[ticket.v][cost] <= time)\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"continue\"\n          }), \"\\n                dist[ticket.v][cost] = time\\n                queue.add(Ticket(ticket.v, cost, time))\\n            }\\n        }\\n        sb.append(\", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"if\"\n          }), \" (answer == Int.MAX_VALUE) \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"Poor KCM\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"else\"\n          }), \" answer).append(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"\\\\n\\\"\"\n          }), \")\\n    }\\n    println(sb)\\n}\\n\\n\", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"private\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"class\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title class_\",\n            children: \"Ticket\"\n          }), \"(val v: Int, val c: Int, val d: Int) : Comparable<Ticket> {\\n    override fun \", _jsx(_components.span, {\n            className: \"hljs-title function_\",\n            children: \"compareTo\"\n          }), _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"(other: Ticket)\"\n          }), \": Int = d.compareTo(other.d)\\n}\\n\"]\n        })\n      }), \"\\n\", _jsx(_components.h2, {\n        children: \"실수했던 점\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"시간초과가 계속 나와서 반복작업을 줄여봤지만 계속해서 시간이 초과됐습니다.\\n결국 문제였던 부분은 다른 부분이 아니라 출력 때문이었습니다.\\n처음에 반복마다 println() 으로 출력하는 식으로 해서 오래 걸렸습니다.\\nstringbuilder로 모아서 출력했더니 통과할 수 있었습니다.\\n만약 로직에서 맞는 것 같은데 시간초과가 나온다면 출력을 모아서 해보는걸 추천드립니다.\"\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}