{"pageProps":{"metadata":{"layout":"post","title":"위상 정렬","date":"2022-02-18 00:45:00 +0900","category":"algorithm","tags":["algorithm"],"keywords":["algorithm"],"id":"위상정렬"},"mdxSource":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      h2: \"h2\",\n      p: \"p\",\n      code: \"code\",\n      ol: \"ol\",\n      li: \"li\"\n    }, _provideComponents(), props.components);\n    return _jsxs(_Fragment, {\n      children: [_jsx(_components.h2, {\n        children: \"위상 정렬\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [_jsx(_components.code, {\n          children: \"위상 정렬(Topological sort)\"\n        }), \"은 정점들의 순서를 찾는 알고리즘입니다.\\n순서가 존재한다는 것은 시작점이 존재한다는 것을 의미합니다.\\n따라서 시작점이 존재하지 않고 반복되는 사이클의 경우 정렬할 수 없습니다.\"]\n      }), \"\\n\", _jsx(_components.h2, {\n        children: \"위상 정렬 특징\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"사이클이 생기지 않을 때 그래프에서 시작점은 여러 곳이 될 수 있습니다.\\n시작점과 연결 순서에 따라서 위상 정렬은 여러가지 순서가 나올 수 있습니다.\"\n      }), \"\\n\", _jsx(_components.h2, {\n        children: \"위상 정렬 방법\"\n      }), \"\\n\", _jsxs(_components.ol, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"진입 차수가 0인 정점들을 큐에 넣습니다.\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"선택된 정점들의 진입 차수를 감소시킵니다.\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"큐가 빌 때까지 1~2번을 반복합니다.\"\n        }), \"\\n\"]\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}