{"pageProps":{"metadata":{"title":"Gradle 종속성 관리","date":"2022-03-15 00:00:01 +0900","category":"backend","tags":["backend"],"keywords":["backend"],"description":"Gradle에 대해서 공식문서를 보면서 살펴봅니다.","id":"Gradle 종속성 관리"},"mdxSource":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      h2: \"h2\",\n      ul: \"ul\",\n      li: \"li\",\n      strong: \"strong\",\n      p: \"p\",\n      img: \"img\",\n      h3: \"h3\",\n      h4: \"h4\",\n      a: \"a\"\n    }, _provideComponents(), props.components);\n    return _jsxs(_Fragment, {\n      children: [_jsx(_components.h2, {\n        children: \"Gradle 종속성 관리\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsxs(_components.li, {\n          children: [_jsx(_components.strong, {\n            children: \"compileOnly\"\n          }), \" : 프로덕션 코드를 컴파일하는 데만 사용\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [_jsx(_components.strong, {\n            children: \"implementation\"\n          }), \" (compile 대체): 컴파일 및 런타임에 사용\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [_jsx(_components.strong, {\n            children: \"runtimeOnly\"\n          }), \" (runtime 대체): 컴파일이 아닌 런타임에만 사용됨\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [_jsx(_components.strong, {\n            children: \"testCompileOnly\"\n          }), \": compileOnly와 기능은 같지만 테스트 용도\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [_jsx(_components.strong, {\n            children: \"testImplementation\"\n          }), \": implementation와 기능은 같지만 테스트 용도\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [_jsx(_components.strong, {\n            children: \"testRuntimeOnly\"\n          }), \": runtimeOnly와 기능은 같지만 테스트 용도\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [_jsx(_components.img, {\n          src: \"/image/gradle-config.png\",\n          alt: \"gradle-config\"\n        }), \"\\n기본적인 자바 프로젝트에서 사용할 때 필요한 종속성 관리 명령어들입니다.\"]\n      }), \"\\n\", _jsx(_components.h3, {\n        children: \"compile이 대체된 이유\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [_jsx(_components.strong, {\n          children: \"compile\"\n        }), \"이 사용되다가 deprecated 된 이유는 종속성을 구분하지 못해서입니다.\\n종속성을 두 가지 종류로 나눌 수 있습니다.\"]\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"프로젝트를 빌드하는데 필요한 종속성\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"프로젝트에서 사용하는 라이브러리를 빌드하는데 필요한 종속성\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [_jsx(_components.strong, {\n          children: \"compile\"\n        }), \"은 이 둘을 분리하지 않았고 모듈 하나를 변경하면 그 영향 범위가 크게 퍼졌습니다.\\n이 기능은 \", _jsx(_components.strong, {\n          children: \"api\"\n        }), \"로 비슷하게 가능해지고 대부분의 상황에서 사용하지 않습니다.\\n이유는 두 종속성을 분리한 이유처럼 영향 범위가 넓어서입니다.\\n\", _jsx(_components.strong, {\n          children: \"api\"\n        }), \"는 공개 되어 있어서 직접 참조하는 모듈이 아니라도 사용할 수 있습니다.\\n반대로 \", _jsx(_components.strong, {\n          children: \"implementation\"\n        }), \"은 직접 참조하는 모듈이 아니면 막혀있기 때문에 사용할 수 없습니다.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"이 결과로 빌드 시간이 달라집니다.\\n\", _jsx(_components.strong, {\n          children: \"compile\"\n        }), \"이나 \", _jsx(_components.strong, {\n          children: \"api\"\n        }), \"의 경우 어떤 모듈을 변경하면 그 모듈을 의존하는 모든 자식을 빌드해야 합니다.\\n하지만 \", _jsx(_components.strong, {\n          children: \"implementation\"\n        }), \"은 의존성이 수정되어도 직접 의존하는 모듈이 수정될 때만 빌드합니다.\\n당연히 \", _jsx(_components.strong, {\n          children: \"implementation\"\n        }), \"이 더 작은 규모를 빌드하기 때문에 속도가 향상됩니다.\\n보안에 있어서도 \", _jsx(_components.strong, {\n          children: \"api\"\n        }), \"는 직접 참조하는 모듈이 아닌 모듈에서도 사용할 수 있는 위험이 있습니다.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"따라서 특수한 경우가 아니라면 \", _jsx(_components.strong, {\n          children: \"implementation\"\n        }), \"을 사용해야 합니다.\"]\n      }), \"\\n\", _jsx(_components.h4, {\n        children: \"참고\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.a, {\n          href: \"https://docs.gradle.org/current/userguide/userguide.html\",\n          children: \"Gradle 공식 문서\"\n        })\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}