{"pageProps":{"metadata":{"title":"[프로그래머스] 빛의 경로 사이클 (JAVA)","date":"2022-01-03 00:45:00 +0900","category":"algorithm","tags":["algorithm"],"keywords":["algorithm"],"id":"교점에 별 만들기"},"mdxSource":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      pre: \"pre\",\n      code: \"code\",\n      span: \"span\",\n      h3: \"h3\",\n      p: \"p\",\n      br: \"br\"\n    }, _provideComponents(), props.components);\n    return _jsxs(_Fragment, {\n      children: [_jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"import\"\n          }), \" java.util.Arrays;\\n\", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"import\"\n          }), \" java.util.HashSet;\\n\", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"import\"\n          }), \" java.util.Objects;\\n\", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"import\"\n          }), \" java.util.Set;\\n\\n\", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"public\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"class\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title class_\",\n            children: \"Solution\"\n          }), \" {\\n\\n    \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"public\"\n          }), \" String[] solution(\", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"int\"\n          }), \"[][] line) {\\n        \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"/*\\n        Ax + By + E = 0\\n        Cx + Dy + F = 0\\n        */\"\n          }), \"\\n        \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"int\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"minX\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" Integer.MAX_VALUE, minY = Integer.MAX_VALUE;\\n        \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"int\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"maxX\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" Integer.MIN_VALUE, maxY = Integer.MIN_VALUE;\\n        Set<Pair> set = \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title class_\",\n            children: \"HashSet\"\n          }), \"<>();\\n        \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"for\"\n          }), \" (\", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"int\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"i\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"0\"\n          }), \"; i < line.length; i++) {\\n            \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"for\"\n          }), \" (\", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"int\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"j\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" i + \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"1\"\n          }), \"; j < line.length; j++) {\\n                \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"if\"\n          }), \" (i == j) \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"continue\"\n          }), \";\\n                \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"long\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"A\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" line[i][\", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"0\"\n          }), \"];\\n                \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"long\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"B\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" line[i][\", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"1\"\n          }), \"];\\n                \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"long\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"E\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" line[i][\", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"2\"\n          }), \"];\\n                \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"long\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"C\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" line[j][\", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"0\"\n          }), \"];\\n                \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"long\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"D\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" line[j][\", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"1\"\n          }), \"];\\n                \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"long\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"F\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" line[j][\", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"2\"\n          }), \"];\\n\\n                \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"long\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"down\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" A * D - B * C;\\n                \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"long\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"ux\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" B * F - E * D;\\n                \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"long\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"uy\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" E * C - A * F;\\n                \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"if\"\n          }), \" (down == \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"0\"\n          }), \" || ux % down != \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"0\"\n          }), \" || uy % down != \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"0\"\n          }), \") \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"continue\"\n          }), \";\\n                minX = Math.min(minX, (\", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"int\"\n          }), \") (ux / down));\\n                maxX = Math.max(maxX, (\", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"int\"\n          }), \") (ux / down));\\n                minY = Math.min(minY, (\", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"int\"\n          }), \") (uy / down));\\n                maxY = Math.max(maxY, (\", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"int\"\n          }), \") (uy / down));\\n                set.add(\", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title class_\",\n            children: \"Pair\"\n          }), \"((\", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"int\"\n          }), \") (uy / down), (\", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"int\"\n          }), \") (ux / down)));\\n            }\\n        }\\n        \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"int\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"x\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" (\", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"int\"\n          }), \") (maxX - minX + \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"1\"\n          }), \");\\n        \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"int\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"y\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" (\", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"int\"\n          }), \") (maxY - minY + \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"1\"\n          }), \");\\n        \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"char\"\n          }), \"[][] map = \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title class_\",\n            children: \"char\"\n          }), \"[y][x];\\n        String[] answer = \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title class_\",\n            children: \"String\"\n          }), \"[y];\\n\\n        \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"for\"\n          }), \" (\", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"char\"\n          }), \"[] m : map)\\n            Arrays.fill(m, \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"'.'\"\n          }), \");\\n\\n        \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"for\"\n          }), \" (Pair p : set)\\n            map[p.y - minY][p.x - minX] = \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"'*'\"\n          }), \";\\n\\n        \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"for\"\n          }), \" (\", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"int\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"i\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"0\"\n          }), \"; i < y; i++) {\\n            answer[i] = \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title class_\",\n            children: \"String\"\n          }), \"(map[y - \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"1\"\n          }), \" - i]);\\n        }\\n\\n        \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"return\"\n          }), \" answer;\\n    }\\n\\n    \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"static\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"class\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title class_\",\n            children: \"Pair\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"implements\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title class_\",\n            children: \"Comparable\"\n          }), \"<Pair> {\\n        \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"int\"\n          }), \" y, x;\\n\\n        \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"public\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title function_\",\n            children: \"Pair\"\n          }), _jsxs(_components.span, {\n            className: \"hljs-params\",\n            children: [\"(\", _jsx(_components.span, {\n              className: \"hljs-type\",\n              children: \"int\"\n            }), \" y, \", _jsx(_components.span, {\n              className: \"hljs-type\",\n              children: \"int\"\n            }), \" x)\"]\n          }), \" {\\n            \", _jsx(_components.span, {\n            className: \"hljs-built_in\",\n            children: \"this\"\n          }), \".y = y;\\n            \", _jsx(_components.span, {\n            className: \"hljs-built_in\",\n            children: \"this\"\n          }), \".x = x;\\n        }\\n\\n        \", _jsx(_components.span, {\n            className: \"hljs-meta\",\n            children: \"@Override\"\n          }), \"\\n        \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"public\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"boolean\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title function_\",\n            children: \"equals\"\n          }), _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"(Object o)\"\n          }), \" {\\n            \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"if\"\n          }), \" (\", _jsx(_components.span, {\n            className: \"hljs-built_in\",\n            children: \"this\"\n          }), \" == o) \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"return\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-literal\",\n            children: \"true\"\n          }), \";\\n            \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"if\"\n          }), \" (o == \", _jsx(_components.span, {\n            className: \"hljs-literal\",\n            children: \"null\"\n          }), \" || getClass() != o.getClass()) \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"return\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-literal\",\n            children: \"false\"\n          }), \";\\n            \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"Pair\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"pair\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" (Pair) o;\\n            \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"return\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"y\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \"= pair.y && x == pair.x;\\n        }\\n\\n        \", _jsx(_components.span, {\n            className: \"hljs-meta\",\n            children: \"@Override\"\n          }), \"\\n        \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"public\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"int\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title function_\",\n            children: \"hashCode\"\n          }), _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"()\"\n          }), \" {\\n            \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"return\"\n          }), \" Objects.hash(y, x);\\n        }\\n\\n        \", _jsx(_components.span, {\n            className: \"hljs-meta\",\n            children: \"@Override\"\n          }), \"\\n        \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"public\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"int\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title function_\",\n            children: \"compareTo\"\n          }), _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"(Pair o)\"\n          }), \" {\\n            \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"if\"\n          }), \" (y == o.y) {\\n                \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"return\"\n          }), \" x - o.x;\\n            }\\n            \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"return\"\n          }), \" Integer.compare(y, o.y);\\n        }\\n    }\\n\\n}\\n\"]\n        })\n      }), \"\\n\", _jsx(_components.h3, {\n        children: \"실수했던 점\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"공식이 주어져서 구현만 잘하면 되는 문제라고 생각했습니다.\", _jsx(_components.br, {}), \"\\n\", \"하지만 테스트케이스 한 두개에서 계속 실패했습니다.\", _jsx(_components.br, {}), \"\\n\", \"로직상으로 잘못된 부분이 없다고 생각해서 오래 고민했습니다.\", _jsx(_components.br, {}), \"\\n\", \"그러다 찾은 문제는 자료형의 크기였습니다.\", _jsx(_components.br, {}), \"\\n\", \"최대로 나올 수 있는 크기가 10만 * 10만이라 100억까지 가게됩니다.\", _jsx(_components.br, {}), \"\\n\", \"음수로 처리되서 계속해서 잘못된 값이 나왔습니다.\", _jsx(_components.br, {}), \"\\n\", \"코딩하기 전에 최대값을 계산하고 자료형을 선택해야겠습니다.\"]\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}