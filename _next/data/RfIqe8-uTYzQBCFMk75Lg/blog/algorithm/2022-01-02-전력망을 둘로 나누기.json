{"pageProps":{"postMetadata":{"title":"[프로그래머스] 전력망을 둘로 나누기 (JAVA)","date":"2022-01-02 00:45:00 +0900","category":"algorithm","tags":["algorithm"],"keywords":["algorithm"],"id":"2022-01-02-전력망을 둘로 나누기"},"postContent":{"compiledSource":"var c=Object.defineProperty,f=Object.defineProperties;var j=Object.getOwnPropertyDescriptors;var r=Object.getOwnPropertySymbols;var s=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable;var u=(n,i,t)=>i in n?c(n,i,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[i]=t,a=(n,i)=>{for(var t in i||(i={}))s.call(i,t)&&u(n,t,i[t]);if(r)for(var t of r(i))p.call(i,t)&&u(n,t,i[t]);return n},o=(n,i)=>f(n,j(i));var l=(n,i)=>{var t={};for(var e in n)s.call(n,e)&&i.indexOf(e)<0&&(t[e]=n[e]);if(n!=null&&r)for(var e of r(n))i.indexOf(e)<0&&p.call(n,e)&&(t[e]=n[e]);return t};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(t){var e=t,{components:n}=e,i=l(e,[\"components\"]);return mdx(MDXLayout,o(a(a({},layoutProps),i),{components:n,mdxType:\"MDXLayout\"}),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-java\"}),`public class Solution {\n\n    public int solution(int n, int[][] wires) {\n        int answer = 100;\n        for(int i = 0; i < n-1; i++){\n            DisjointSet set = new DisjointSet(n);\n            for(int j = 0; j < n-1; j++){\n                if(j == i) continue;\n                set.merge(wires[j][0], wires[j][1]);\n            }\n            int partialSize = set.getPartialSize();\n            answer = Math.min(answer, Math.abs(n - 2 * partialSize));\n        }\n        return answer;\n    }\n\n    static class DisjointSet{\n        int[] parents;\n        int[] rank;\n\n        public DisjointSet(int n){\n            parents = new int[n+1];\n            rank = new int[n+1];\n            for(int i = 1; i < n+1; i++){\n                parents[i] = i;\n                rank[i] = 1;\n            }\n        }\n\n        public int find(int u){\n            if(parents[u] == u) return u;\n            return parents[u] = find(parents[u]);\n        }\n\n        public void merge(int u, int v){\n            u = find(u);\n            v = find(v);\n            if(u == v) return;\n            parents[u] = v;\n        }\n\n        private int getPartialSize(){\n            int size = 0;\n            int partialParent = find(1);\n            for(int i = 1; i < parents.length; i++){\n                if(find(i) == partialParent)\n                    size++;\n            }\n            return size;\n        }\n    }\n}\n`)),mdx(\"h3\",null,\"\\uC2E4\\uC218\\uD588\\uB358 \\uC810\"),mdx(\"p\",null,\"\\uAC01 \\uC9D1\\uD569\\uC758 \\uB8E8\\uD2B8\\uB97C \\uCC3E\\uC544\\uC11C \\uC77C\\uCE58\\uD558\\uB294\\uC9C0 \\uD655\\uC778\\uD588\\uC5B4\\uC57C \\uD558\\uB294\\uB370 \\uBD80\\uBAA8\\uB97C \\uCC3E\\uC544\\uC11C \\uBE44\\uAD50\\uD588\\uC2B5\\uB2C8\\uB2E4.\",mdx(\"br\",{parentName:\"p\"}),`\n`,\"\\uBD80\\uBAA8\\uAC00 \\uBD80\\uBD84\\uC801\\uC73C\\uB85C\\uB9CC \\uAC31\\uC2E0\\uB418\\uB294 \\uC810\\uC744 \\uC0DD\\uAC01\\uD558\\uC9C0 \\uBABB\\uD588\\uC2B5\\uB2C8\\uB2E4.\",mdx(\"br\",{parentName:\"p\"}),`\n`,\"\\uC77C\\uB2E8 \\uC2DC\\uAC04\\uC774 \\uB354 \\uAC78\\uB9AC\\uB354\\uB77C\\uB3C4 \\uD655\\uC2E4\\uD55C \\uBC29\\uBC95\\uC73C\\uB85C \\uD480\\uC5B4\\uC57C\\uACA0\\uC2B5\\uB2C8\\uB2E4.  \"))}MDXContent.isMDXComponent=!0;\n","scope":{}},"id":"2022-01-02-전력망을 둘로 나누기"},"__N_SSG":true}