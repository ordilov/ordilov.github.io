{"pageProps":{"postMetadata":{"layout":"post","title":"[프로그래머스] 프렌즈4블록 (JAVA)","date":"2022-01-11 00:45:00 +0900","category":"algorithm","tags":["algorithm"],"keywords":["algorithm"],"id":"2022-01-11-프렌즈4블록"},"postContent":{"compiledSource":"var b=Object.defineProperty,d=Object.defineProperties;var f=Object.getOwnPropertyDescriptors;var r=Object.getOwnPropertySymbols;var a=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable;var s=(i,n,t)=>n in i?b(i,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[n]=t,o=(i,n)=>{for(var t in n||(n={}))a.call(n,t)&&s(i,t,n[t]);if(r)for(var t of r(n))c.call(n,t)&&s(i,t,n[t]);return i},l=(i,n)=>d(i,f(n));var u=(i,n)=>{var t={};for(var e in i)a.call(i,e)&&n.indexOf(e)<0&&(t[e]=i[e]);if(i!=null&&r)for(var e of r(i))n.indexOf(e)<0&&c.call(i,e)&&(t[e]=i[e]);return t};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(t){var e=t,{components:i}=e,n=u(e,[\"components\"]);return mdx(MDXLayout,l(o(o({},layoutProps),n),{components:i,mdxType:\"MDXLayout\"}),mdx(\"pre\",null,mdx(\"code\",o({parentName:\"pre\"},{className:\"language-java\"}),`class Solution {\n    boolean[][] visited;\n    char[][] blocks;\n    int[] dy = {0, 1, 0, 1};\n    int[] dx = {0, 0, 1, 1};\n\n    public int solution(int m, int n, String[] board) {\n        blocks = new char[m][];\n        int answer = 0;\n        for (int i = 0; i < board.length; i++)\n            blocks[i] = board[i].toCharArray();\n\n        while (true) {\n            int count = 0;\n            visited = new boolean[m][n];\n            for (int i = 0; i < m; i++) {\n                for (int j = 0; j < n; j++) {\n                    if (blocks[i][j] == Character.MIN_VALUE) continue;\n                    if (!isMatched(i, j)) continue;\n                    count += checkVisited(i, j);\n                }\n            }\n            if (count == 0) break;\n            removeBlocks(m, n);\n            arrangeBlocks(m, n);\n            answer += count;\n        }\n        return answer;\n    }\n\n    private void removeBlocks(int m, int n) {\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                if (visited[i][j])\n                    blocks[i][j] = Character.MIN_VALUE;\n            }\n        }\n    }\n\n    private void arrangeBlocks(int m, int n) {\n        for (int j = 0; j < n; j++) {\n            for (int i = m - 1; i >= 0; i--) {\n                if (blocks[i][j] != Character.MIN_VALUE) continue;\n                int next = i - 1;\n                while (next >= 0 && blocks[next][j] == Character.MIN_VALUE) {\n                    next--;\n                }\n                if (next < 0) break;\n                blocks[i][j] = blocks[next][j];\n                blocks[next][j] = Character.MIN_VALUE;\n            }\n        }\n    }\n\n    private boolean isMatched(int y, int x) {\n        for (int i = 1; i < 4; i++) {\n            int ny = dy[i] + y;\n            int nx = dx[i] + x;\n            if (ny >= blocks.length || nx >= blocks[0].length) return false;\n            if (blocks[ny][nx] != blocks[y][x]) return false;\n        }\n        return true;\n    }\n\n    private int checkVisited(int y, int x) {\n        int visitCount = 0;\n        for (int i = 0; i < 4; i++) {\n            int ny = dy[i] + y;\n            int nx = dx[i] + x;\n            if (!visited[ny][nx]) visitCount++;\n            visited[ny][nx] = true;\n        }\n        return visitCount;\n    }\n}\n`)),mdx(\"h2\",null,\"\\uC2E4\\uC218\\uD588\\uB358 \\uC810\"),mdx(\"p\",null,\"dfs\\uB85C \\uC7AC\\uADC0\\uD568\\uC218\\uB85C \\uC791\\uC131\\uD588\\uC744 \\uB54C \\uC2DC\\uAC04\\uCD08\\uACFC\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC2B5\\uB2C8\\uB2E4.\",mdx(\"br\",{parentName:\"p\"}),`\n`,\"\\uC774\\uC804\\uC5D0\\uB3C4 \\uADF8\\uB7AC\\uC9C0\\uB9CC \\uB418\\uB3C4\\uB85D \\uBC18\\uBCF5\\uBB38\\uC73C\\uB85C \\uCC98\\uB9AC\\uD574\\uC57C\\uACA0\\uC2B5\\uB2C8\\uB2E4.\",mdx(\"br\",{parentName:\"p\"}),`\n`,\"\\uC911\\uBCF5\\uB418\\uB294 \\uBD80\\uBD84\\uB4E4\\uC744 \\uB354 \\uCD5C\\uC801\\uD654\\uD560 \\uC218 \\uC788\\uC744 \\uAC83 \\uAC19\\uC2B5\\uB2C8\\uB2E4.  \"))}MDXContent.isMDXComponent=!0;\n","scope":{}},"id":"2022-01-11-프렌즈4블록"},"__N_SSG":true}