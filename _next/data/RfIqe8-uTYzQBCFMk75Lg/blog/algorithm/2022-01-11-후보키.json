{"pageProps":{"postMetadata":{"layout":"post","title":"[프로그래머스] 후보키 (JAVA)","date":"2022-01-11 00:45:00 +0900","category":"algorithm","tags":["algorithm"],"keywords":["algorithm"],"id":"2022-01-11-후보키"},"postContent":{"compiledSource":"var d=Object.defineProperty,c=Object.defineProperties;var m=Object.getOwnPropertyDescriptors;var a=Object.getOwnPropertySymbols;var o=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable;var l=(e,t,n)=>t in e?d(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,i=(e,t)=>{for(var n in t||(t={}))o.call(t,n)&&l(e,n,t[n]);if(a)for(var n of a(t))s.call(t,n)&&l(e,n,t[n]);return e},p=(e,t)=>c(e,m(t));var u=(e,t)=>{var n={};for(var r in e)o.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(e!=null&&a)for(var r of a(e))t.indexOf(r)<0&&s.call(e,r)&&(n[r]=e[r]);return n};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(n){var r=n,{components:e}=r,t=u(r,[\"components\"]);return mdx(MDXLayout,p(i(i({},layoutProps),t),{components:e,mdxType:\"MDXLayout\"}),mdx(\"pre\",null,mdx(\"code\",i({parentName:\"pre\"},{className:\"language-java\"}),`import java.util.Set;\nimport java.util.HashSet;\nimport java.util.Arrays;\nclass Solution {\n    boolean[] visited;\n    Set<String> columns = new HashSet<>();\n    Set<Set<String>> candidates = new HashSet<>();\n\n    public int solution(String[][] relation) {\n        visited = new boolean[relation[0].length];\n        int answer = 0;\n        for (int size = 1; size <= relation[0].length; size++) {\n            answer += countCandidateKey(relation, 0, size);\n        }\n        return answer;\n    }\n\n    private int countCandidateKey(String[][] relation, int start, int size) {\n        if (size == columns.size()) {\n            if (relation.length != getTupleSize(relation)) return 0;\n            for (Set<String> candidate : candidates) {\n                if (columns.containsAll(candidate)) return 0;\n            }\n            candidates.add(new HashSet<>(columns));\n            return 1;\n        }\n\n        int candidateKey = 0;\n        for (int i = start; i < relation[0].length; i++) {\n            if (visited[i]) continue;\n            columns.add(String.valueOf(i));\n            visited[i] = true;\n            candidateKey += countCandidateKey(relation, i + 1, size);\n            columns.remove(String.valueOf(i));\n            visited[i] = false;\n        }\n        return candidateKey;\n    }\n\n    private int getTupleSize(String[][] relation) {\n        String[] row = new String[relation.length];\n        Arrays.fill(row, \"\");\n        for (String column : columns) {\n            for (int i = 0; i < relation.length; i++) {\n                row[i] += relation[i][Integer.parseInt(column)];\n            }\n        }\n        return new HashSet<>(Arrays.asList(row)).size();\n    }\n}\n`)),mdx(\"h2\",null,\"\\uC2E4\\uC218\\uD588\\uB358 \\uC810\"),mdx(\"p\",null,\"\\uC774\\uC804\\uC5D0 \\uD480\\uB2E4\\uAC00 \\uD3EC\\uAE30\\uD588\\uC5C8\\uB358 \\uBB38\\uC81C\\uC600\\uC2B5\\uB2C8\\uB2E4.\",mdx(\"br\",{parentName:\"p\"}),`\n`,\"\\uC5EC\\uB7EC \\uAC1C\\uC758 \\uCE7C\\uB7FC\\uC744 \\uC5B4\\uB5BB\\uAC8C \\uC870\\uD569\\uD560\\uC9C0 \\uAC10\\uC774 \\uC548\\uC654\\uB294\\uB370 \",mdx(\"strong\",{parentName:\"p\"},\"DFS\"),\"\\uB97C \\uC774\\uC6AF\\uD574 \\uD480\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\",mdx(\"br\",{parentName:\"p\"}),`\n`,\"\\uBA3C\\uC800 \\uC870\\uD569\\uC73C\\uB85C \\uBAA8\\uB4E0 \\uACBD\\uC6B0\\uC758 \\uC218\\uB97C \\uB9CC\\uB4E4\\uACE0 \\uCD5C\\uC18C\\uC131\\uC744 \\uB9CC\\uC871\\uD558\\uB294\\uC9C0 \\uD655\\uC778\\uD588\\uC2B5\\uB2C8\\uB2E4.\",mdx(\"br\",{parentName:\"p\"}),`\n`,\"\\uADF8\\uB7F0\\uB370 \\uCC98\\uC74C\\uC5D0\\uB294 \\uD0A4\\uB4E4\\uC744 \\uBB38\\uC790\\uC5F4 \\uD558\\uB098\\uB85C \\uD569\\uCCD0\\uC11C \\uBE44\\uAD50\\uD588\\uB294\\uB370 \\uC5EC\\uAE30\\uC11C \\uBB38\\uC81C\\uAC00 \\uC788\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\",mdx(\"br\",{parentName:\"p\"}),`\n`,mdx(\"inlineCode\",{parentName:\"p\"},'[\"01\", \"001\"] [\"010\", \"01\"]'),\" \\uC740 \\uC720\\uC77C\\uC131\\uC744 \\uB9CC\\uC871\\uD558\\uC9C0\\uB9CC \\uD569\\uCE58\\uBA74 \\uB9CC\\uC871 \\uBABB\\uD558\\uB294 \\uAC78\\uB85C \\uD310\\uBCC4\\uB429\\uB2C8\\uB2E4.\",mdx(\"br\",{parentName:\"p\"}),`\n`,\"\\uB530\\uB77C\\uC11C \\uBB38\\uC790\\uC5F4 \\uB9D0\\uACE0 \\uC9D1\\uD569\\uC5D0 \\uB2F4\\uC544\\uC11C \\uC9D1\\uD569\\uB07C\\uB9AC \\uBE44\\uAD50\\uD574\\uC57C \\uD588\\uC2B5\\uB2C8\\uB2E4.\",mdx(\"br\",{parentName:\"p\"}),`\n`,\"\\uC774\\uAC78 \\uAC00\\uB2A5\\uD558\\uAC8C \\uD574\\uC8FC\\uB294 \\uD568\\uC218\\uB294 \",mdx(\"strong\",{parentName:\"p\"},\"containsAll\"),\" \\uC785\\uB2C8\\uB2E4.\",mdx(\"br\",{parentName:\"p\"}),`\n`,\"\\uBC14\\uAFB8\\uACE0\\uC11C \\uBB38\\uC81C\\uB294 \\uD1B5\\uACFC\\uD558\\uC9C0\\uB9CC \\uBE44\\uD6A8\\uC728\\uC801\\uC774\\uB77C\\uACE0 \\uB290\\uAEF4\\uC838 \\uB2E4\\uB978 \\uC0AC\\uB78C\\uB4E4\\uC758 \\uD480\\uC774\\uB97C \\uCC3E\\uC544\\uBD24\\uC2B5\\uB2C8\\uB2E4.\",mdx(\"br\",{parentName:\"p\"}),`\n`,\"\\uC778\\uC0C1\\uC801\\uC774\\uC5C8\\uB358 \\uBD80\\uBD84\\uC740 \\uC644\\uC804 \\uD0D0\\uC0C9\\uC744 \\uD560 \\uB54C \\uBE44\\uD2B8\\uC5F0\\uC0B0\\uC744 \\uC0AC\\uC6A9\\uD558\\uB294 \\uAC83\\uC785\\uB2C8\\uB2E4.\",mdx(\"br\",{parentName:\"p\"}),`\n`,mdx(\"strong\",{parentName:\"p\"},\"BitSet\"),\"\\uC744 \\uC0AC\\uC6A9\\uD560 \\uC218\\uB3C4 \\uC788\\uACE0 \\uB2E8\\uC21C \\uBE44\\uD2B8\\uC5F0\\uC0B0\\uC73C\\uB85C\\uB3C4 \\uAC00\\uB2A5\\uD569\\uB2C8\\uB2E4.  \"))}MDXContent.isMDXComponent=!0;\n","scope":{}},"id":"2022-01-11-후보키"},"__N_SSG":true}