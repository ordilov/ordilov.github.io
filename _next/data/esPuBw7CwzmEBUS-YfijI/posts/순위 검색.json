{"pageProps":{"metadata":{"layout":"post","title":"[프로그래머스] 순위 검색","date":"2022-01-19 00:45:00 +0900","category":"algorithm","tags":["algorithm"],"keywords":["algorithm"],"id":"순위 검색"},"mdxSource":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      pre: \"pre\",\n      code: \"code\",\n      span: \"span\",\n      h2: \"h2\",\n      p: \"p\",\n      br: \"br\"\n    }, _provideComponents(), props.components);\n    return _jsxs(_Fragment, {\n      children: [_jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"import\"\n          }), \" java.util.*;\\n\\n\", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// [순위 검색] https://programmers.co.kr/learn/courses/30/lessons/72412?language=java\"\n          }), \"\\n\", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"public\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"class\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"Solution\"\n          }), \" {\\n\\n    \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"public\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"int\"\n          }), \"[] solution(String[] info, String[] query) {\\n        Map<String, List<Integer>> map = \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"HashMap\"\n          }), \"<>();\\n        \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"for\"\n          }), \" (String i : info) {\\n            String[] split = i.split(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\" \\\"\"\n          }), \");\\n            \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"int\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"score\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" Integer.parseInt(split[\", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"4\"\n          }), \"]);\\n            \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"for\"\n          }), \" (String c : combination(split)) {\\n                List<Integer> scores = map.getOrDefault(c, \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"ArrayList\"\n          }), \"<>());\\n                scores.add(score);\\n                map.put(c, scores);\\n            }\\n        }\\n\\n        map.values().forEach(Collections::sort);\\n\\n        \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"int\"\n          }), \"[] answer = \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"int\"\n          }), \"[query.length];\\n        \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"for\"\n          }), \" (\", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"int\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"j\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"0\"\n          }), \"; j < query.length; j++) {\\n            String[] split = query[j].split(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\" \\\"\"\n          }), \");\\n            \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"int\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"score\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" Integer.parseInt(split[\", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"7\"\n          }), \"]);\\n            \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"String\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"q\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" split[\", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"0\"\n          }), \"] + split[\", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"2\"\n          }), \"] + split[\", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"4\"\n          }), \"] + split[\", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"6\"\n          }), \"];\\n            \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"if\"\n          }), \" (map.get(q) == \", _jsx(_components.span, {\n            className: \"hljs-literal\",\n            children: \"null\"\n          }), \") \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"continue\"\n          }), \";\\n            answer[j] = binarySearch(map.get(q), score);\\n        }\\n        \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"return\"\n          }), \" answer;\\n    }\\n\\n    \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"private\"\n          }), \" String[] combination(String[] split) {\\n        String[] comb = \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-class\",\n            children: \"String\"\n          }), \"[\", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"16\"\n          }), \"];\\n        Arrays.fill(comb, \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"\\\"\"\n          }), \");\\n        \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"for\"\n          }), \" (\", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"int\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"i\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"0\"\n          }), \"; i < \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"4\"\n          }), \"; i++) {\\n            \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"for\"\n          }), \" (\", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"int\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"j\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"0\"\n          }), \"; j < (\", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"2\"\n          }), \" << i); j++) {\\n                \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"int\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"size\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"8\"\n          }), \" >> i;\\n                \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"for\"\n          }), \" (\", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"int\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"k\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"0\"\n          }), \"; k < size; k++) {\\n                    comb[j * size + k] += j % \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"2\"\n          }), \" == \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"0\"\n          }), \" ? \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"'-'\"\n          }), \" : split[i];\\n                }\\n            }\\n        }\\n        \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"return\"\n          }), \" comb;\\n    }\\n\\n    \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"private\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"int\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title hljs-function\",\n            children: \"binarySearch\"\n          }), _jsxs(_components.span, {\n            className: \"hljs-params\",\n            children: [\"(List<Integer> a, \", _jsx(_components.span, {\n              className: \"hljs-type\",\n              children: \"int\"\n            }), \" score)\"]\n          }), \" {\\n        \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"int\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"low\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"0\"\n          }), \";\\n        \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"int\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"high\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" a.size();\\n        \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"int\"\n          }), \" mid;\\n        \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"while\"\n          }), \" (low < high) {\\n            mid = (low + high) / \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"2\"\n          }), \";\\n            \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"if\"\n          }), \" (a.get(mid) >= score) {\\n                high = mid;\\n            } \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"else\"\n          }), \" {\\n                low = mid + \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"1\"\n          }), \";\\n            }\\n        }\\n        \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"return\"\n          }), \" a.size() - low;\\n    }\\n\\n}\\n\"]\n        })\n      }), \"\\n\", _jsx(_components.h2, {\n        children: \"실수했던 점\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"처음에 각 부문마다 나누어서 계산했더니 정확성은 통과했지만 효율성에서 실패했습니다.\", _jsx(_components.br, {}), \"\\n\", \"몇 번을 최적화했지만 실패했습니다.\", _jsx(_components.br, {}), \"\\n\", \"그래서 다음으로 시도해본게 모든 경우의 수를 구하고 시도했습니다.\", _jsx(_components.br, {}), \"\\n\", \"하지만 점수를 넘는 사람을 찾을 때 선형탐색으로 구했더니 역시 시간초과였습니다.\", _jsx(_components.br, {}), \"\\n\", \"그래서 이분탐색 라이브러리를 사용했는데 문제가 생겼습니다.\", _jsx(_components.br, {}), \"\\n\", \"이분탐색 라이브러리는 중복되는 값이 있는 경우 최저 인덱스를 구해주지 않습니다.\", _jsx(_components.br, {}), \"\\n\", \"중복 중에는 랜덤으로 인덱스를 구하게 됩니다.\", _jsx(_components.br, {}), \"\\n\", \"여기서 문제를 찾느라 한참 걸렸습니다.\", _jsx(_components.br, {}), \"\\n\", \"좀만 더 하면 풀거 같은 아쉬운 마음에 너무 시간을 많이 잡아먹은 문제였습니다.\"]\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}