{"pageProps":{"metadata":{"layout":"post","title":"[프로그래머스] 방금그곡 (JAVA)","date":"2022-01-09 00:45:00 +0900","category":"algorithm","tags":["algorithm"],"keywords":["algorithm"],"id":"방금그곡"},"mdxSource":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      pre: \"pre\",\n      code: \"code\",\n      span: \"span\",\n      h2: \"h2\",\n      p: \"p\",\n      br: \"br\"\n    }, _provideComponents(), props.components);\n    return _jsxs(_Fragment, {\n      children: [_jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-java\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"import\"\n          }), \" java.util.List;\\n\", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"import\"\n          }), \" java.util.ArrayList;\\n\", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"import\"\n          }), \" java.text.ParseException;\\n\", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"import\"\n          }), \" java.text.SimpleDateFormat;\\n\", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"import\"\n          }), \" java.util.concurrent.TimeUnit;\\n\\n\", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"class\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title class_\",\n            children: \"Solution\"\n          }), \" {\\n    \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"public\"\n          }), \" String \", _jsx(_components.span, {\n            className: \"hljs-title function_\",\n            children: \"solution\"\n          }), _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"(String m, String[] musicinfos)\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"throws\"\n          }), \" ParseException {\\n        \", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"/*\\n        musicinfos 로 재생된 거 만들기\\n        m과 비교해서 일치하는 것 찾기\\n        일치하면 재생된 시간 제일 긴것\\n        재생된 시간도 같으면 먼저 입력된 음악 제목\\n        */\"\n          }), \"\\n        List<String> list = \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title class_\",\n            children: \"ArrayList\"\n          }), \"<>();\\n        \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"int\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"max\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"0\"\n          }), \";\\n        \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"SimpleDateFormat\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"format\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title class_\",\n            children: \"SimpleDateFormat\"\n          }), \"(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"HH:mm\\\"\"\n          }), \");\\n        m = translateNoSharp(m);\\n        \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"for\"\n          }), \" (String musicinfo : musicinfos) {\\n            String[] split = musicinfo.split(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\",\\\"\"\n          }), \");\\n            \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"long\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"startDate\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" format.parse(split[\", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"0\"\n          }), \"]).getTime();\\n            \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"long\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"endDate\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" format.parse(split[\", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"1\"\n          }), \"]).getTime();\\n            \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"int\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"minute\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" (\", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"int\"\n          }), \") TimeUnit.MILLISECONDS.toMinutes(endDate - startDate);\\n\\n            \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"String\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"title\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" split[\", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"2\"\n          }), \"];\\n            \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"String\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"score\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" split[\", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"3\"\n          }), \"];\\n            score = translateNoSharp(score);\\n            \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"StringBuilder\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"melody\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-title class_\",\n            children: \"StringBuilder\"\n          }), \"();\\n            \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"int\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"length\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" minute;\\n            \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"while\"\n          }), \" (length > \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"0\"\n          }), \") {\\n                melody.append(score, \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"0\"\n          }), \", Math.min(length, score.length()));\\n                length -= score.length();\\n            }\\n            \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"int\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"idx\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" melody.indexOf(m);\\n            \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"if\"\n          }), \" (idx == -\", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"1\"\n          }), \") \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"continue\"\n          }), \";\\n            \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"if\"\n          }), \" (minute < max) \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"continue\"\n          }), \";\\n            \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"if\"\n          }), \" (minute > max) {\\n                list.clear();\\n                max = minute;\\n            }\\n            list.add(title);\\n        }\\n        \", _jsx(_components.span, {\n            className: \"hljs-type\",\n            children: \"String\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"answer\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"(None)\\\"\"\n          }), \";\\n        \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"if\"\n          }), \" (list.size() > \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"0\"\n          }), \") answer = list.get(\", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"0\"\n          }), \");\\n        \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"return\"\n          }), \" answer;\\n    }\\n\\n    \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"private\"\n          }), \" String \", _jsx(_components.span, {\n            className: \"hljs-title function_\",\n            children: \"translateNoSharp\"\n          }), _jsx(_components.span, {\n            className: \"hljs-params\",\n            children: \"(String score)\"\n          }), \" {\\n        score = score.replaceAll(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"C#\\\"\"\n          }), \", \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"c\\\"\"\n          }), \");\\n        score = score.replaceAll(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"D#\\\"\"\n          }), \", \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"d\\\"\"\n          }), \");\\n        score = score.replaceAll(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"F#\\\"\"\n          }), \", \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"f\\\"\"\n          }), \");\\n        score = score.replaceAll(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"G#\\\"\"\n          }), \", \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"g\\\"\"\n          }), \");\\n        score = score.replaceAll(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"A#\\\"\"\n          }), \", \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"a\\\"\"\n          }), \");\\n        \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"return\"\n          }), \" score;\\n    }\\n}\\n\"]\n        })\n      }), \"\\n\", _jsx(_components.h2, {\n        children: \"실수했던 점\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"처음 시도는 #을 기준으로 예외처리를 할려고 했습니다.\", _jsx(_components.br, {}), \"\\n\", \"하지만 로직에 문제가 있었는지 테스트케이스 3개정도가 통과하지 못했습니다.\", _jsx(_components.br, {}), \"\\n\", \"결국 다른 방법을 찾아 #을 아예 치환하는 방법을 택했습니다.\", _jsx(_components.br, {}), \"\\n\", \"처음 방법으로 성공하지 못한게 아쉬웠습니다.\", _jsx(_components.br, {}), \"\\n\", \"문법적으로 잘 몰랐던 부분은 SimpleDateFormat입니다.\", _jsx(_components.br, {}), \"\\n\", \"처음에 Date 클래스를 사용하려했는데 \", _jsx(_components.code, {\n          children: \"시:분\"\n        }), \"만 따로 사용할 수가 없었습니다.\", _jsx(_components.br, {}), \"\\n\", \"그래서 포맷으로 바꾸고 시간 차이를 분으로 바꿔야 됐습니다.\", _jsx(_components.br, {}), \"\\n\", \"시간 차이는 밀리세컨드로 나오므로 분으로 바꾸려면 나누기 60 * 1000을 해주면 됩니다.\", _jsx(_components.br, {}), \"\\n\", \"하지만 더 보기 쉬운 방법으로 TimeUnit의 Enum을 사용하면 ms에서 minute으로 변환할 수 있습니다.\"]\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}