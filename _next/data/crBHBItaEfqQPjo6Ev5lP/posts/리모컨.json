{"pageProps":{"metadata":{"layout":"post","title":"[백준] 리모컨","date":"2022-02-22 00:01:00 +0900","category":"algorithm","tags":["algorithm"],"keywords":["algorithm"],"id":"리모컨"},"mdxSource":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      pre: \"pre\",\n      code: \"code\",\n      span: \"span\",\n      h2: \"h2\",\n      p: \"p\"\n    }, _provideComponents(), props.components);\n    return _jsxs(_Fragment, {\n      children: [_jsx(_components.pre, {\n        children: _jsxs(_components.code, {\n          className: \"hljs language-kotlin\",\n          children: [_jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"package\"\n          }), \" boj.bruteforce\\n\\n\", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"import\"\n          }), \" kotlin.math.abs\\n\\n\", _jsx(_components.span, {\n            className: \"hljs-comment\",\n            children: \"// [리모컨] https://www.acmicpc.net/problem/1107\"\n          }), \"\\n\", _jsxs(_components.span, {\n            className: \"hljs-function\",\n            children: [_jsx(_components.span, {\n              className: \"hljs-keyword\",\n              children: \"fun\"\n            }), \" \", _jsx(_components.span, {\n              className: \"hljs-title\",\n              children: \"main\"\n            }), _jsx(_components.span, {\n              className: \"hljs-params\",\n              children: \"()\"\n            })]\n          }), \" {\\n    \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"val\"\n          }), \" n = readLine()!!.toInt()\\n    \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"val\"\n          }), \" m = readLine()!!.toInt()\\n    \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"val\"\n          }), \" broken = BooleanArray(\", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"10\"\n          }), \")\\n    \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"if\"\n          }), \" (m != \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"0\"\n          }), \")\\n        readLine()!!.split(\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\" \\\"\"\n          }), \").forEach { broken[it.toInt()] = \", _jsx(_components.span, {\n            className: \"hljs-literal\",\n            children: \"true\"\n          }), \" }\\n    \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"val\"\n          }), \" justMove = abs(\", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"100\"\n          }), \" - n)\\n\\n    \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"var\"\n          }), \" min = \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"987654321\"\n          }), \";\\n    \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"for\"\n          }), \" (i \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"in\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"0\"\n          }), \" until \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"1000000\"\n          }), \") {\\n        \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"val\"\n          }), \" str = i.toString()\\n        \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"var\"\n          }), \" movable = \", _jsx(_components.span, {\n            className: \"hljs-literal\",\n            children: \"true\"\n          }), \"\\n        \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"for\"\n          }), \" (element \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"in\"\n          }), \" str) {\\n            \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"if\"\n          }), \" (broken[element.digitToInt()]) {\\n                movable = \", _jsx(_components.span, {\n            className: \"hljs-literal\",\n            children: \"false\"\n          }), \"\\n                \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"break\"\n          }), \"\\n            }\\n        }\\n        \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"if\"\n          }), \" (!movable) \", _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"continue\"\n          }), \"\\n        min = min.coerceAtMost(str.length + abs(i - n))\\n    }\\n    println(justMove.coerceAtMost(min))\\n}\\n\"]\n        })\n      }), \"\\n\", _jsx(_components.h2, {\n        children: \"실수했던 점\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"한 번 숫자가 정해지고 나면 그 이후로는 더하거나 빼서 값을 구하는 문제였습니다.\\n문제는 그 숫자가 정해지는 방법인데 최적의 방법이 있을 것이라 생각하고 구하려 했습니다.\\n하지만 계속해서 예외 케이스가 나왔고 결국 완전 탐색으로 해결했습니다.\\n다시 한 번 시간이 충분하다면 완전 탐색으로 푸는 걸 먼저 해보는게 더 빠른 방법이라 배웠습니다.\"\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}